
#include <iostream>  
#include <cctype>  
#include <string>  
#include <algorithm> 

 struct code
     {
         int id;
         int times;         
     };
bool cmp (code a,code b)
    { 
        if(a.times > b.times)
        	return 1;
        else if(a.times == b.times) 
           return a.id < b.id;
        else
            return 0;
    } 
class Coder {
public:
    
    
	
     
    
    vector<string> findCoder(vector<string> A, int n) {
        vector<code>coder;
        
        // write code here
        for(int i=0;i<n;i++)
        {
            
            for(int j=0;j<A[i].length();j++)
            {
                if(A[i][j]<='Z'&&A[i][j]>='A')
                    A[i][j] = A[i][j]-'A'+'a';
            }
        }
        for(int i=0;i<n;i++)
        {
            int times=0;
            for(int j=0;j<A[i].length()-4;j++)
            {
                if(A[i][j]=='c')
                {
                    if(A[i][j+1]=='o'&&A[i][j+2]=='d'&&A[i][j+3]=='e'&&A[i][j+4]=='r')
                    {
                        times++;
                        j = j+4;
                    }
                }
            }
            if(times==0)
                continue;
            code temp;
            temp.id = i;
            temp.times = times;
            
            coder.push_back(temp);
        }
        sort(coder.begin(),coder.end(),cmp);
        vector<string>res;
        for(int i=0;i<=coder.size()-1;i++)
        {
            res.push_back(A[coder[i].id]);
        }
        return res;
    }
};