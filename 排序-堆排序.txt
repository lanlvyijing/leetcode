#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <sstream>
#include<fstream>
using namespace std;
int heapSize=0;

    /*stringstream stream;
    stream<<shu;
    string temp=stream.str();   //此处也可以用 stream>>string_temp*/
void maxHeapify(vector<int>& data,int index)
{
    int largest =index;
    int left = (index<<1)+1;
    int right = (index<<1)+2;
    if(left<heapSize&&data[index]<data[left])
        largest=left;
    if(right<heapSize&&data[largest]<data[right])
        largest=right;
    if(largest!=index)
    {
        int temp = data[largest];
        data[largest]=data[index];
        data[index]=temp;
        maxHeapify(data,largest);
    }
}

void buildMaxHeap(vector<int>& data,int n)
{
    int i;
    heapSize=n;
    for(i=(n>>1);i>=0;i--)
    {
        maxHeapify(data,i);
        for(int k=0;k<10;k++)
            cout<<data[k]<<" ";
        cout<<endl;
    }
}


void heap_sort(vector<int>&data,int n)
{
    int i;
    buildMaxHeap(data,(n));
    cout<<"after heap:  ";
    for(int k=0;k<10;k++)
        cout<<data[k]<<" ";
    cout<<endl;
    for(i=n-1;i>=1;i--)
    {
         int temp = data[0];
        data[0]=data[i];
        data[i]=temp;
        heapSize--;
        maxHeapify(data,0);
    }
}


int main()
{
    vector<int>data(10,0);
    int n=data.size();
    for(int i=0;i<n;i++)
    {
        data[i]=i;
    }
    data[1]=7;
    data[7]=2;
    data[2]=1;
    for(int i=0;i<10;i++)
        cout<<data[i]<<" ";
    cout<<endl;
    cout<<endl;
    heap_sort(data,data.size());

   for(int i=0;i<n;i++)
    cout<<data[i]<<" ";
   cout<<endl;

    return 0;
}
